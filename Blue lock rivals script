-- ‚ö†Ô∏è Assicurati di usare questo solo in LocalScript (es: StarterPlayerScripts)
-- ‚ö†Ô∏è Blue Lock Script - ProfileStats Edition - FIXED

local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
end)

if not success then
    warn("Errore caricamento Rayfield, provo backup...")
    Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()
end

local player = game.Players.LocalPlayer
local profileStats = nil

-- Aspetta ProfileStats con timeout
local function waitForProfileStats()
    local attempts = 0
    local maxAttempts = 50
    
    while attempts < maxAttempts do
        profileStats = player:FindFirstChild("ProfileStats")
        if profileStats then
            break
        end
        wait(0.1)
        attempts = attempts + 1
    end
    
    if not profileStats then
        warn("ProfileStats non trovato dopo " .. maxAttempts .. " tentativi")
        return false
    end
    
    return true
end

-- Carica ProfileStats
if not waitForProfileStats() then
    -- Crea notifica di errore
    game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
        Text = "‚ùå ERRORE: ProfileStats non trovato!";
        Color = Color3.fromRGB(255, 0, 0);
        Font = Enum.Font.SourceSansBold;
        FontSize = Enum.FontSize.Size18;
    })
    return
end

print("=== BLUE LOCK DEBUG ===")
print("ProfileStats trovato:", profileStats:GetFullName())
print("Contenuto di ProfileStats:")
for _, child in ipairs(profileStats:GetChildren()) do
    if child:IsA("IntValue") or child:IsA("NumberValue") then
        print("-", child.Name, "=", child.Value)
    end
end
print("=== END DEBUG ===")

-- Salva i valori originali
local originalValues = {
    Money = 0,
    Spins = 0,
    FlowSpins = 0
}

-- Funzione per salvare i valori originali
local function saveOriginalValues()
    local money = profileStats:FindFirstChild("Money")
    local spins = profileStats:FindFirstChild("Spins")
    local flowSpins = profileStats:FindFirstChild("FlowSpins")
    
    if money then originalValues.Money = money.Value end
    if spins then originalValues.Spins = spins.Value end
    if flowSpins then originalValues.FlowSpins = flowSpins.Value end
    
    print("Valori originali salvati:", originalValues.Money, originalValues.Spins, originalValues.FlowSpins)
end

-- Salva i valori all'avvio
saveOriginalValues()

-- Variabili per i loop
local moneyLoop = false
local spinsLoop = false
local flowSpinsLoop = false

-- Crea la finestra con error handling
local Window = nil
local success2, err = pcall(function()
    Window = Rayfield:CreateWindow({
        Name = "Blue Lock - ProfileStats",
        LoadingTitle = "Caricamento Blue Lock Cheats...",
        LoadingSubtitle = "Sistema di Modifica ProfileStats",
        ConfigurationSaving = {
            Enabled = false,
            FolderName = "BlueLockCheats"
        },
        Discord = {
            Enabled = false
        },
        KeySystem = false
    })
end)

if not success2 then
    warn("Errore creazione finestra:", err)
    return
end

-- Crea il tab principale
local MainTab = Window:CreateTab("‚öôÔ∏è Stats Modifier", 4483362458)

-- Sezione Money
local MoneySection = MainTab:CreateSection("üí∞ Money")

-- Toggle per Money infinito con loop
MainTab:CreateToggle({
    Name = "Unlimited Money",
    CurrentValue = false,
    Flag = "MoneyToggle",
    Callback = function(Value)
        moneyLoop = Value
        if Value then
            spawn(function()
                while moneyLoop do
                    local money = profileStats:FindFirstChild("Money")
                    if money then
                        money.Value = 99999999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üí∞ Unlimited Money ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local money = profileStats:FindFirstChild("Money")
            if money then
                money.Value = originalValues.Money
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üí∞ Unlimited Money DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Money personalizzato
MainTab:CreateSlider({
    Name = "Custom Money Amount",
    Range = {0, 100000000},
    Increment = 1000,
    Suffix = "$",
    CurrentValue = 0,
    Flag = "MoneySlider",
    Callback = function(Value)
        local money = profileStats:FindFirstChild("Money")
        if money then
            money.Value = Value
            print("Money impostato a:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üí∞ Money impostato a: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Spins
local SpinSection = MainTab:CreateSection("üé∞ Spins")

-- Toggle per Spins infiniti con loop
MainTab:CreateToggle({
    Name = "Unlimited Spins",
    CurrentValue = false,
    Flag = "SpinsToggle",
    Callback = function(Value)
        spinsLoop = Value
        if Value then
            spawn(function()
                while spinsLoop do
                    local spins = profileStats:FindFirstChild("Spins")
                    if spins then
                        spins.Value = 999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé∞ Unlimited Spins ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local spins = profileStats:FindFirstChild("Spins")
            if spins then
                spins.Value = originalValues.Spins
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé∞ Unlimited Spins DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Spins personalizzati
MainTab:CreateSlider({
    Name = "Custom Spins Amount",
    Range = {0, 1000},
    Increment = 1,
    Suffix = " spins",
    CurrentValue = 0,
    Flag = "SpinsSlider",
    Callback = function(Value)
        local spins = profileStats:FindFirstChild("Spins")
        if spins then
            spins.Value = Value
            print("Spins impostati a:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé∞ Spins impostati a: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Flow Spins
local FlowSpinSection = MainTab:CreateSection("üåä Flow Spins")

-- Toggle per Flow Spins infiniti con loop
MainTab:CreateToggle({
    Name = "Unlimited Flow Spins",
    CurrentValue = false,
    Flag = "FlowSpinsToggle",
    Callback = function(Value)
        flowSpinsLoop = Value
        if Value then
            spawn(function()
                while flowSpinsLoop do
                    local flowSpins = profileStats:FindFirstChild("FlowSpins")
                    if flowSpins then
                        flowSpins.Value = 999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üåä Unlimited Flow Spins ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local flowSpins = profileStats:FindFirstChild("FlowSpins")
            if flowSpins then
                flowSpins.Value = originalValues.FlowSpins
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üåä Unlimited Flow Spins DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Flow Spins personalizzati
MainTab:CreateSlider({
    Name = "Custom Flow Spins Amount",
    Range = {0, 1000},
    Increment = 1,
    Suffix = " flow spins",
    CurrentValue = 0,
    Flag = "FlowSpinsSlider",
    Callback = function(Value)
        local flowSpins = profileStats:FindFirstChild("FlowSpins")
        if flowSpins then
            flowSpins.Value = Value
            print("FlowSpins impostati a:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üåä Flow Spins impostati a: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Utilit√†
local UtilitySection = MainTab:CreateSection("üîß Utility")

-- Button per resettare tutto
MainTab:CreateButton({
    Name = "Reset All Values",
    Callback = function()
        -- Ferma tutti i loop
        moneyLoop = false
        spinsLoop = false
        flowSpinsLoop = false
        
        wait(0.2) -- Aspetta che i loop si fermino
        
        -- Reset Money
        local money = profileStats:FindFirstChild("Money")
        if money then money.Value = originalValues.Money end
        
        -- Reset Spins
        local spins = profileStats:FindFirstChild("Spins")
        if spins then spins.Value = originalValues.Spins end
        
        -- Reset Flow Spins
        local flowSpins = profileStats:FindFirstChild("FlowSpins")
        if flowSpins then flowSpins.Value = originalValues.FlowSpins end
        
        print("Tutti i valori resettati")
        Rayfield:Notify({
            Title = "Blue Lock",
            Content = "üîÑ Tutti i valori sono stati resettati!",
            Duration = 3,
            Image = 4483362458
        })
    end,
})

-- Button per aggiornare valori originali
MainTab:CreateButton({
    Name = "Update Original Values",
    Callback = function()
        saveOriginalValues()
        Rayfield:Notify({
            Title = "Blue Lock",
            Content = "üìù Valori originali aggiornati!",
            Duration = 3,
            Image = 4483362458
        })
    end,
})

-- Button per info
MainTab:CreateButton({
    Name = "Show Current Stats",
    Callback = function()
        local money = profileStats:FindFirstChild("Money")
        local spins = profileStats:FindFirstChild("Spins")
        local flowSpins = profileStats:FindFirstChild("FlowSpins")
        
        local moneyVal = money and money.Value or "N/A"
        local spinsVal = spins and spins.Value or "N/A"
        local flowSpinsVal = flowSpins and flowSpins.Value or "N/A"
        
        print("Stats attuali - Money:", moneyVal, "Spins:", spinsVal, "FlowSpins:", flowSpinsVal)
        
        Rayfield:Notify({
            Title = "Current Stats",
            Content = "üí∞ Money: " .. moneyVal .. " | üé∞ Spins: " .. spinsVal .. " | üåä Flow: " .. flowSpinsVal,
            Duration = 5,
            Image = 4483362458
        })
    end,
})

-- Button per debug ProfileStats
MainTab:CreateButton({
    Name = "Debug ProfileStats",
    Callback = function()
        print("=== DEBUG PROFILESTATS ===")
        if profileStats then
            for _, child in ipairs(profileStats:GetChildren()) do
                if child:IsA("IntValue") or child:IsA("NumberValue") then
                    print("-", child.Name, "=", child.Value, "(", child.ClassName, ")")
                end
            end
        else
            print("ProfileStats non trovato!")
        end
        print("=== END DEBUG ===")
        
        Rayfield:Notify({
            Title = "Debug",
            Content = "üîç Controlla la console per i dettagli",
            Duration = 3,
            Image = 4483362458
        })
    end,
})

-- Cleanup quando il giocatore lascia
game.Players.PlayerRemoving:Connect(function(plr)
    if plr == player then
        moneyLoop = false
        spinsLoop = false
        flowSpinsLoop = false
    end
end)

-- Messaggio di benvenuto
Rayfield:Notify({
    Title = "Blue Lock Cheats",
    Content = "‚úÖ ProfileStats script caricato e fixato!",
    Duration = 4,
    Image = 4483362458
})

print("üî• Blue Lock Script caricato con successo!")
