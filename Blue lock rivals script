-- ‚ö†Ô∏è Assicurati di usare questo solo in LocalScript (es: StarterPlayerScripts)
-- ‚ö†Ô∏è Blue Lock Script - ProfileStats Edition - FIXED WITH STYLE & LEVEL

local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
end)

if not success then
    warn("Errore caricamento Rayfield, provo backup...")
    Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()
end

local player = game.Players.LocalPlayer
local profileStats = nil
local playerStats = nil

-- Aspetta ProfileStats con timeout
local function waitForProfileStats()
    local attempts = 0
    local maxAttempts = 50
    
    while attempts < maxAttempts do
        profileStats = player:FindFirstChild("ProfileStats")
        if profileStats then
            break
        end
        wait(0.1)
        attempts = attempts + 1
    end
    
    if not profileStats then
        warn("ProfileStats non trovato dopo " .. maxAttempts .. " tentativi")
        return false
    end
    
    return true
end

-- Aspetta PlayerStats con timeout
local function waitForPlayerStats()
    local attempts = 0
    local maxAttempts = 50
    
    while attempts < maxAttempts do
        playerStats = player:FindFirstChild("PlayerStats")
        if playerStats then
            break
        end
        wait(0.1)
        attempts = attempts + 1
    end
    
    if not playerStats then
        warn("PlayerStats non trovato dopo " .. maxAttempts .. " tentativi")
        return false
    end
    
    return true
end

-- Carica ProfileStats e PlayerStats
if not waitForProfileStats() then
    -- Crea notifica di errore
    game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
        Text = "‚ùå ERRORE: ProfileStats non trovato!";
        Color = Color3.fromRGB(255, 0, 0);
        Font = Enum.Font.SourceSansBold;
        FontSize = Enum.FontSize.Size18;
    })
    return
end

if not waitForPlayerStats() then
    -- Crea notifica di errore
    game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
        Text = "‚ùå ERRORE: PlayerStats non trovato!";
        Color = Color3.fromRGB(255, 0, 0);
        Font = Enum.Font.SourceSansBold;
        FontSize = Enum.FontSize.Size18;
    })
    return
end

print("=== BLUE LOCK DEBUG ===")
print("ProfileStats trovato:", profileStats:GetFullName())
print("PlayerStats trovato:", playerStats:GetFullName())
print("Contenuto di ProfileStats:")
for _, child in ipairs(profileStats:GetChildren()) do
    if child:IsA("IntValue") or child:IsA("NumberValue") then
        print("-", child.Name, "=", child.Value)
    end
end
print("Contenuto di PlayerStats:")
for _, child in ipairs(playerStats:GetChildren()) do
    if child:IsA("IntValue") or child:IsA("NumberValue") then
        print("-", child.Name, "=", child.Value)
    end
end
print("=== END DEBUG ===")

-- Salva i valori originali
local originalValues = {
    Money = 0,
    Spins = 0,
    FlowSpins = 0,
    Level = 0,
    Stamina = 0,
    Style = 0
}

-- Funzione per salvare i valori originali
local function saveOriginalValues()
    local money = profileStats:FindFirstChild("Money")
    local spins = profileStats:FindFirstChild("Spins")
    local flowSpins = profileStats:FindFirstChild("FlowSpins")
    local level = profileStats:FindFirstChild("Level")
    local stamina = playerStats:FindFirstChild("Stamina")
    local style = playerStats:FindFirstChild("Style")
    
    if money then originalValues.Money = money.Value end
    if spins then originalValues.Spins = spins.Value end
    if flowSpins then originalValues.FlowSpins = flowSpins.Value end
    if level then originalValues.Level = level.Value end
    if stamina then originalValues.Stamina = stamina.Value end
    if style then originalValues.Style = style.Value end
    
    print("Valori originali salvati:", originalValues.Money, originalValues.Spins, originalValues.FlowSpins, originalValues.Level, originalValues.Stamina, originalValues.Style)
end

-- Salva i valori all'avvio
saveOriginalValues()

-- Variabili per i loop
local moneyLoop = false
local spinsLoop = false
local flowSpinsLoop = false
local levelLoop = false
local staminaLoop = false
local styleLoop = false
local currentStyleValue = 0

-- Crea la finestra con error handling
local Window = nil
local success2, err = pcall(function()
    Window = Rayfield:CreateWindow({
        Name = "Blue Lock - ProfileStats FIXED",
        LoadingTitle = "Caricamento Blue Lock Cheats...",
        LoadingSubtitle = "Sistema di Modifica ProfileStats + Style & Level",
        ConfigurationSaving = {
            Enabled = false,
            FolderName = "BlueLockCheats"
        },
        Discord = {
            Enabled = false
        },
        KeySystem = false
    })
end)

if not success2 then
    warn("Errore creazione finestra:", err)
    return
end

-- Crea il tab principale
local MainTab = Window:CreateTab("‚öôÔ∏è Stats Modifier", 4483362458)

-- Sezione Money
local MoneySection = MainTab:CreateSection("üí∞ Money")

-- Toggle per Money infinito con loop
MainTab:CreateToggle({
    Name = "Unlimited Money",
    CurrentValue = false,
    Flag = "MoneyToggle",
    Callback = function(Value)
        moneyLoop = Value
        if Value then
            spawn(function()
                while moneyLoop do
                    local money = profileStats:FindFirstChild("Money")
                    if money then
                        money.Value = 99999999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üí∞ Unlimited Money ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local money = profileStats:FindFirstChild("Money")
            if money then
                money.Value = originalValues.Money
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üí∞ Unlimited Money DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Money personalizzato
MainTab:CreateSlider({
    Name = "Custom Money Amount",
    Range = {0, 100000000},
    Increment = 1000,
    Suffix = "$",
    CurrentValue = 0,
    Flag = "MoneySlider",
    Callback = function(Value)
        local money = profileStats:FindFirstChild("Money")
        if money then
            money.Value = Value
            print("Money impostato a:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üí∞ Money impostato a: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Level
local LevelSection = MainTab:CreateSection("üÜô Level")

-- Toggle per Level infinito con loop
MainTab:CreateToggle({
    Name = "Unlimited Level",
    CurrentValue = false,
    Flag = "LevelToggle",
    Callback = function(Value)
        levelLoop = Value
        if Value then
            spawn(function()
                while levelLoop do
                    local level = profileStats:FindFirstChild("Level")
                    if level then
                        level.Value = 999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üÜô Unlimited Level ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local level = profileStats:FindFirstChild("Level")
            if level then
                level.Value = originalValues.Level
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üÜô Unlimited Level DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Level personalizzato
MainTab:CreateSlider({
    Name = "Custom Level Amount",
    Range = {1, 999},
    Increment = 1,
    Suffix = " lvl",
    CurrentValue = 1,
    Flag = "LevelSlider",
    Callback = function(Value)
        local level = profileStats:FindFirstChild("Level")
        if level then
            level.Value = Value
            print("Level impostato a:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üÜô Level impostato a: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Spins
local SpinSection = MainTab:CreateSection("üé∞ Spins")

-- Toggle per Spins infiniti con loop
MainTab:CreateToggle({
    Name = "Unlimited Spins",
    CurrentValue = false,
    Flag = "SpinsToggle",
    Callback = function(Value)
        spinsLoop = Value
        if Value then
            spawn(function()
                while spinsLoop do
                    local spins = profileStats:FindFirstChild("Spins")
                    if spins then
                        spins.Value = 999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé∞ Unlimited Spins ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local spins = profileStats:FindFirstChild("Spins")
            if spins then
                spins.Value = originalValues.Spins
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé∞ Unlimited Spins DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Spins personalizzati
MainTab:CreateSlider({
    Name = "Custom Spins Amount",
    Range = {0, 1000},
    Increment = 1,
    Suffix = " spins",
    CurrentValue = 0,
    Flag = "SpinsSlider",
    Callback = function(Value)
        local spins = profileStats:FindFirstChild("Spins")
        if spins then
            spins.Value = Value
            print("Spins impostati a:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé∞ Spins impostati a: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Flow Spins
local FlowSpinSection = MainTab:CreateSection("üåä Flow Spins")

-- Toggle per Flow Spins infiniti con loop
MainTab:CreateToggle({
    Name = "Unlimited Flow Spins",
    CurrentValue = false,
    Flag = "FlowSpinsToggle",
    Callback = function(Value)
        flowSpinsLoop = Value
        if Value then
            spawn(function()
                while flowSpinsLoop do
                    local flowSpins = profileStats:FindFirstChild("FlowSpins")
                    if flowSpins then
                        flowSpins.Value = 999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üåä Unlimited Flow Spins ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local flowSpins = profileStats:FindFirstChild("FlowSpins")
            if flowSpins then
                flowSpins.Value = originalValues.FlowSpins
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üåä Unlimited Flow Spins DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Flow Spins personalizzati
MainTab:CreateSlider({
    Name = "Custom Flow Spins Amount",
    Range = {0, 1000},
    Increment = 1,
    Suffix = " flow spins",
    CurrentValue = 0,
    Flag = "FlowSpinsSlider",
    Callback = function(Value)
        local flowSpins = profileStats:FindFirstChild("FlowSpins")
        if flowSpins then
            flowSpins.Value = Value
            print("FlowSpins impostati a:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üåä Flow Spins impostati a: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Crea il tab Other
local OtherTab = Window:CreateTab("‚ö° Other", 4483362458)

-- Sezione Stamina
local StaminaSection = OtherTab:CreateSection("‚ö° Stamina")

-- Toggle per Stamina infinita con loop
OtherTab:CreateToggle({
    Name = "Unlimited Stamina",
    CurrentValue = false,
    Flag = "StaminaToggle",
    Callback = function(Value)
        staminaLoop = Value
        if Value then
            spawn(function()
                while staminaLoop and playerStats do
                    local stamina = playerStats:FindFirstChild("Stamina")
                    if stamina then
                        stamina.Value = 999
                    end
                    wait(0.1)
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "‚ö° Unlimited Stamina ATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        else
            local stamina = playerStats:FindFirstChild("Stamina")
            if stamina then
                stamina.Value = originalValues.Stamina
            end
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "‚ö° Unlimited Stamina DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Style - BUTTON VERSION
local StyleSection = OtherTab:CreateSection("üé® Style Changer - BUTTONS")

-- Toggle per mantenere lo Style attivo
OtherTab:CreateToggle({
    Name = "Keep Style Active",
    CurrentValue = false,
    Flag = "StyleKeepToggle",
    Callback = function(Value)
        styleLoop = Value
        if Value then
            spawn(function()
                while styleLoop and playerStats do
                    local style = playerStats:FindFirstChild("Style")
                    if style then
                        style.Value = currentStyleValue
                    end
                    wait(0.05) -- Loop pi√π veloce
                end
            end)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style Lock ATTIVATO - Lo style rimarr√† fisso!",
                Duration = 3,
                Image = 4483362458
            })
        else
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style Lock DISATTIVATO",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Button per Default Style
OtherTab:CreateButton({
    Name = "Select Default Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = 0
            style.Value = 0
            print("Style cambiato a: Default (0)")
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style: Default (0)",
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Button per Sae Style
OtherTab:CreateButton({
    Name = "Select Sae Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = 1
            style.Value = 1
            print("Style cambiato a: Sae (1)")
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style: Sae (1)",
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Button per NEL Isagi Style
OtherTab:CreateButton({
    Name = "Select NEL Isagi Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = 2
            style.Value = 2
            print("Style cambiato a: NEL Isagi (2)")
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style: NEL Isagi (2)",
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Button per Kaiser Style
OtherTab:CreateButton({
    Name = "Select Kaiser Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = 3
            style.Value = 3
            print("Style cambiato a: Kaiser (3)")
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style: Kaiser (3)",
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Button per Don Lorenzo Style
OtherTab:CreateButton({
    Name = "Select Don Lorenzo Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = 4
            style.Value = 4
            print("Style cambiato a: Don Lorenzo (4)")
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style: Don Lorenzo (4)",
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Button per NEL Rin Style
OtherTab:CreateButton({
    Name = "Select NEL Rin Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = 5
            style.Value = 5
            print("Style cambiato a: NEL Rin (5)")
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style: NEL Rin (5)",
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Button per Loki Style
OtherTab:CreateButton({
    Name = "Select Loki Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = 6
            style.Value = 6
            print("Style cambiato a: Loki (6)")
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style: Loki (6)",
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Slider per Style personalizzato
OtherTab:CreateSlider({
    Name = "Custom Style Value",
    Range = {0, 20},
    Increment = 1,
    Suffix = " style",
    CurrentValue = 0,
    Flag = "StyleSlider",
    Callback = function(Value)
        local style = playerStats:FindFirstChild("Style")
        if style then
            currentStyleValue = Value
            style.Value = Value
            print("Style impostato a valore:", Value)
            Rayfield:Notify({
                Title = "Blue Lock",
                Content = "üé® Style impostato a valore: " .. Value,
                Duration = 2,
                Image = 4483362458
            })
        end
    end,
})

-- Button per mostrare style attuale
OtherTab:CreateButton({
    Name = "Show Current Style",
    Callback = function()
        local style = playerStats:FindFirstChild("Style")
        if style then
            local styleNames = {
                [0] = "Default",
                [1] = "Sae",
                [2] = "NEL Isagi",
                [3] = "Kaiser",
                [4] = "Don Lorenzo",
                [5] = "NEL Rin",
                [6] = "Loki"
            }
            
            local currentStyle = styleNames[style.Value] or "Sconosciuto (Valore: " .. style.Value .. ")"
            print("Style attuale:", currentStyle, "- Valore:", style.Value)
            
            Rayfield:Notify({
                Title = "Current Style",
                Content = "üé® Style attuale: " .. currentStyle,
                Duration = 3,
                Image = 4483362458
            })
        else
            Rayfield:Notify({
                Title = "Errore",
                Content = "‚ùå Style non trovato!",
                Duration = 3,
                Image = 4483362458
            })
        end
    end,
})

-- Sezione Utilit√†
local UtilitySection = MainTab:CreateSection("üîß Utility")

-- Button per resettare tutto
MainTab:CreateButton({
    Name = "Reset All Values",
    Callback = function()
        -- Ferma tutti i loop
        moneyLoop = false
        spinsLoop = false
        flowSpinsLoop = false
        levelLoop = false
        staminaLoop = false
        styleLoop = false
        
        wait(0.2) -- Aspetta che i loop si fermino
        
        -- Reset Money
        local money = profileStats:FindFirstChild("Money")
        if money then money.Value = originalValues.Money end
        
        -- Reset Spins
        local spins = profileStats:FindFirstChild("Spins")
        if spins then spins.Value = originalValues.Spins end
        
        -- Reset Flow Spins
        local flowSpins = profileStats:FindFirstChild("FlowSpins")
        if flowSpins then flowSpins.Value = originalValues.FlowSpins end
        
        -- Reset Level
        local level = profileStats:FindFirstChild("Level")
        if level then level.Value = originalValues.Level end
        
        -- Reset Stamina
        local stamina = playerStats:FindFirstChild("Stamina")
        if stamina then stamina.Value = originalValues.Stamina end
        
        -- Reset Style
        local style = playerStats:FindFirstChild("Style")
        if style then style.Value = originalValues.Style end
        
        currentStyleValue = originalValues.Style
        
        print("Tutti i valori resettati")
        Rayfield:Notify({
            Title = "Blue Lock",
            Content = "üîÑ Tutti i valori sono stati resettati!",
            Duration = 3,
            Image = 4483362458
        })
    end,
})

-- Button per aggiornare valori originali
MainTab:CreateButton({
    Name = "Update Original Values",
    Callback = function()
        saveOriginalValues()
        Rayfield:Notify({
            Title = "Blue Lock",
            Content = "üìù Valori originali aggiornati!",
            Duration = 3,
            Image = 4483362458
        })
    end,
})

-- Button per info
MainTab:CreateButton({
    Name = "Show Current Stats",
    Callback = function()
        local money = profileStats:FindFirstChild("Money")
        local spins = profileStats:FindFirstChild("Spins")
        local flowSpins = profileStats:FindFirstChild("FlowSpins")
        local level = profileStats:FindFirstChild("Level")
        local stamina = playerStats:FindFirstChild("Stamina")
        local style = playerStats:FindFirstChild("Style")
        
        local moneyVal = money and money.Value or "N/A"
        local spinsVal = spins and spins.Value or "N/A"
        local flowSpinsVal = flowSpins and flowSpins.Value or "N/A"
        local levelVal = level and level.Value or "N/A"
        local staminaVal = stamina and stamina.Value or "N/A"
        local styleVal = style and style.Value or "N/A"
        
        print("Stats attuali - Money:", moneyVal, "Spins:", spinsVal, "FlowSpins:", flowSpinsVal, "Level:", levelVal, "Stamina:", staminaVal, "Style:", styleVal)
        
        Rayfield:Notify({
            Title = "Current Stats",
            Content = "üí∞ Money: " .. moneyVal .. " | üé∞ Spins: " .. spinsVal .. " | üåä Flow: " .. flowSpinsVal .. " | üÜô Level: " .. levelVal,
            Duration = 5,
            Image = 4483362458
        })
    end,
})

-- Button per debug ProfileStats
MainTab:CreateButton({
    Name = "Debug ProfileStats",
    Callback = function()
        print("=== DEBUG PROFILESTATS ===")
        if profileStats then
            for _, child in ipairs(profileStats:GetChildren()) do
                if child:IsA("IntValue") or child:IsA("NumberValue") then
                    print("-", child.Name, "=", child.Value, "(", child.ClassName, ")")
                end
            end
        else
            print("ProfileStats non trovato!")
        end
        print("=== END DEBUG ===")
        
        Rayfield:Notify({
            Title = "Debug",
            Content = "üîç Controlla la console per i dettagli",
            Duration = 3,
            Image = 4483362458
        })
    end,
})

-- Debug per Other tab
OtherTab:CreateButton({
    Name = "Debug PlayerStats",
    Callback = function()
        print("=== DEBUG PLAYERSTATS ===")
        if playerStats then
            for _, child in ipairs(playerStats:GetChildren()) do
                if child:IsA("IntValue") or child:IsA("NumberValue") then
                    print("-", child.Name, "=", child.Value, "(", child.ClassName, ")")
                end
            end
        else
            print("PlayerStats non trovato!")
        end
        print("=== END DEBUG ===")
        
        Rayfield:Notify({
            Title = "Debug PlayerStats",
            Content = "üîç Controlla la console per tutti i PlayerStats",
            Duration = 3,
            Image = 4483362458
        })
    end,
})

-- Cleanup quando il giocatore lascia
game.Players.PlayerRemoving:Connect(function(plr)
    if plr == player then
        moneyLoop = false
        spinsLoop = false
        flowSpinsLoop = false
        levelLoop = false
        staminaLoop = false
        styleLoop = false
    end
end)

-- Messaggio di benvenuto
Rayfield:Notify({
    Title = "Blue Lock Cheats FIXED",
    Content = "‚úÖ Script caricato con Style & Level funzionanti!",
    Duration = 4,
    Image = 4483362458
})

print("üî• Blue Lock Script FIXED caricato con successo!")
